/***************************************************************************************************
 ******************************************* dependencies ******************************************
 **************************************************************************************************/
const express = require('express');
const db = require('../../data/helpers/dbUsrsHelpers.js');
const bcrypt = require('bcryptjs');
const router = express.Router();

/***************************************************************************************************
 ******************************************** middleware *******************************************
 **************************************************************************************************/
function protected(req, res, next) {
  // if a session exists AND the user is logged in... next
  // else bounce the user
  if (req.session && req.session.userId) {
    next()
  } else {
    res.status(401).json({ message: 'you shall not pass, not authenticated' })
  }
}

/***************************************************************************************************
 ********************************************** routes *********************************************
 **************************************************************************************************/
router.get('/', protected, (req, res) => {
  db.getAllUsers()
    .then(Users => {
      res.status(200).json(Users)
    })
    .catch(err => res.send(err))
})
/***************************************************************************************************
 ********************************************* export(s) *******************************************
 **************************************************************************************************/
module.exports = router;